{
  "openapi": "3.0.0",
  "info": {
    "title": "GetProspect API",
    "description": "GetProspect API reference v1.1",
    "contact": {},
    "version": "1.1"
  },
  "servers": [
    {
      "url": "https://api.getprospect.com"
    }
  ],
  "paths": {
    "/api/v1/contacts/lists": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get lists",
        "description": "Get contacts lists",
        "operationId": "ListController_getLists",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size(default 10, max 500)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number(default 1)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Should be ASC or DESC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Create new list",
        "description": "Add new contact list",
        "operationId": "ListController_createList",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/lists/lists-sizes": {
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Get list size",
        "description": "Get lists count dy list id",
        "operationId": "ListController_getListsCount",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchListsCountDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSizesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/lists/{listId}": {
      "patch": {
        "tags": [
          "Lists"
        ],
        "summary": "Update list",
        "description": "Update list by id",
        "operationId": "ListController_updateList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "List id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/lists/{list}/add": {
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Add contacts to list",
        "description": "Save new contacts to list",
        "operationId": "ListController_addContactsToList",
        "parameters": [
          {
            "name": "list",
            "in": "path",
            "description": "List id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity created"
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/lists/{list}/contacts/search": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get list contacts",
        "description": "Search contacts by filter related to list",
        "operationId": "ListController_getListContacts",
        "parameters": [
          {
            "name": "list",
            "in": "path",
            "description": "list id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size(default 10, max 500)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number(default 1)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Should be ASC or DESC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListData"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/properties": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get all properties",
        "description": "Get properties for all entity types",
        "operationId": "PropertiesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/contact": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "description": "Create new contact",
        "operationId": "ContactController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/contact/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get single contact",
        "description": "Get contact by id",
        "operationId": "ContactController_getContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "description": "Delete contact by id",
        "operationId": "ContactController_delete",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "description": "Update contact by id",
        "operationId": "ContactController_update",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/contact/search": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Search contacts",
        "description": "Search contacts by filter",
        "operationId": "ContactController_search",
        "parameters": [
          {
            "name": "includeCount",
            "in": "query",
            "description": "Include size of contacts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size(default 10, max 500)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number(default 1)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Should be ASC or DESC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchContactsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContactData"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/contacts/contact/{contactId}/companies": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Add companies to contact",
        "description": "Create a new contact-company relations",
        "operationId": "ContactController_addCompaniesToContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCompaniesRelationsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entity given"
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/companies/company": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get all companies",
        "description": "Return all companies for the current user",
        "operationId": "CompanyController_findAll",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size(default 10, max 500)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number(default 1)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Should be ASC or DESC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCompanyData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create company",
        "description": "Create a new company",
        "operationId": "CompanyController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/companies/company/search/query": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Search companies",
        "description": "Search companies with name",
        "operationId": "CompanyController_findCompanyWithName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Company name string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Query limit",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/companies/company/{companyId}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get single company",
        "description": "Get company by id",
        "operationId": "CompanyController_getCompany",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete company",
        "description": "Delete company by id",
        "operationId": "CompanyController_delete",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Update company",
        "description": "Update company by id",
        "operationId": "CompanyController_update",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/insights/search": {
      "post": {
        "tags": [
          "Insights"
        ],
        "summary": "Create search",
        "description": "Search leads by filter options inside GetProspect Database",
        "operationId": "InsightsController_createSearch",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSearchDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightSearchModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "402": {
            "description": "Insufficiently credits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/insights/search/contact": {
      "get": {
        "tags": [
          "Insights"
        ],
        "summary": "Search lead by LinkedIn link",
        "operationId": "InsightsController_getContactByLinkedIn",
        "parameters": [
          {
            "name": "linkedinUrl",
            "in": "query",
            "description": "LinkedIn link",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInsightModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "402": {
            "description": "Insufficiently credits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/insights/search/companies": {
      "get": {
        "tags": [
          "Insights"
        ],
        "summary": "Search insight companies",
        "description": "Search insight companies by name or domain",
        "operationId": "InsightsController_searchCompaniesByNameOrDomain",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Company name or domain",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit companies(default 10, max 100)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInsightModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/insights/search/{searchId}": {
      "get": {
        "tags": [
          "Insights"
        ],
        "summary": "Get search",
        "description": "Check every minute status of this search to know when it finished",
        "operationId": "InsightsController_getSingleSearch",
        "parameters": [
          {
            "name": "searchId",
            "in": "path",
            "description": "Search id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightSearchModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/public/v1/email/verify": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Verify Email",
        "description": "Verify email",
        "operationId": "PublicApiEmailController_sendBounceEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundVerifiedEmail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "408": {
            "description": "Request timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/public/v1/email/find": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Find Email",
        "description": "Find email by name and company name or company domain",
        "operationId": "PublicApiEmailController_publicFindEmail",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company",
            "in": "query",
            "description": "Company",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundEmail"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          },
          "408": {
            "description": "Request timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/public/v1/insights/contacts": {
      "post": {
        "tags": [
          "Insights"
        ],
        "summary": "Find contacts",
        "description": "Find contacts",
        "operationId": "PublicApiInsightsController_publicSearchContacts",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size(default 10, max 500)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number(default 1)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Should be ASC or DESC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchInsightsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Entity given",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContactsData"
                }
              }
            }
          },
          "400": {
            "description": "Bad model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpBadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpException"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ListModel": {
        "required": [
          "deleted",
          "dynamic",
          "lastAddedContactAt",
          "listId",
          "name",
          "owner",
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dynamic": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "workspaceId": {
            "type": "number"
          },
          "owner": {
            "type": "string"
          },
          "lastAddedContactAt": {
            "type": "string"
          },
          "listId": {
            "type": "number"
          }
        }
      },
      "HttpException": {
        "required": [
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "All details about an error"
          },
          "statusCode": {
            "type": "string",
            "description": "Http status code",
            "enum": [
              "CONTINUE",
              "SWITCHING_PROTOCOLS",
              "PROCESSING",
              "OK",
              "CREATED",
              "ACCEPTED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NO_CONTENT",
              "RESET_CONTENT",
              "PARTIAL_CONTENT",
              "AMBIGUOUS",
              "MOVED_PERMANENTLY",
              "FOUND",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "PAYMENT_REQUIRED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "GONE",
              "LENGTH_REQUIRED",
              "PRECONDITION_FAILED",
              "PAYLOAD_TOO_LARGE",
              "URI_TOO_LONG",
              "UNSUPPORTED_MEDIA_TYPE",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "EXPECTATION_FAILED",
              "I_AM_A_TEAPOT",
              "UNPROCESSABLE_ENTITY",
              "FAILED_DEPENDENCY",
              "TOO_MANY_REQUESTS",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT",
              "HTTP_VERSION_NOT_SUPPORTED"
            ]
          },
          "error": {
            "type": "string",
            "description": "Base message about an error"
          }
        }
      },
      "SearchListsCountDto": {
        "required": [
          "listIds"
        ],
        "type": "object",
        "properties": {
          "listIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListSizesResponse": {
        "required": [
          "contactsCount",
          "listId"
        ],
        "type": "object",
        "properties": {
          "contactsCount": {
            "type": "number"
          },
          "listId": {
            "type": "string"
          }
        }
      },
      "IError": {
        "required": [
          "details",
          "title"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "HttpBadRequestException": {
        "required": [
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "All details about an error"
          },
          "statusCode": {
            "type": "string",
            "description": "Http status code",
            "enum": [
              "CONTINUE",
              "SWITCHING_PROTOCOLS",
              "PROCESSING",
              "OK",
              "CREATED",
              "ACCEPTED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NO_CONTENT",
              "RESET_CONTENT",
              "PARTIAL_CONTENT",
              "AMBIGUOUS",
              "MOVED_PERMANENTLY",
              "FOUND",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "PAYMENT_REQUIRED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "GONE",
              "LENGTH_REQUIRED",
              "PRECONDITION_FAILED",
              "PAYLOAD_TOO_LARGE",
              "URI_TOO_LONG",
              "UNSUPPORTED_MEDIA_TYPE",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "EXPECTATION_FAILED",
              "I_AM_A_TEAPOT",
              "UNPROCESSABLE_ENTITY",
              "FAILED_DEPENDENCY",
              "TOO_MANY_REQUESTS",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT",
              "HTTP_VERSION_NOT_SUPPORTED"
            ]
          },
          "error": {
            "type": "string",
            "description": "Base message about an error"
          },
          "errors": {
            "type": "array",
            "description": "Array of a path and message about an invalid property",
            "items": {
              "$ref": "#/components/schemas/IError"
            }
          }
        }
      },
      "CreateListDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateListDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "AddContactsDto": {
        "type": "object",
        "properties": {
          "contactsIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Sort": {
        "required": [
          "column",
          "order"
        ],
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "Meta": {
        "required": [
          "page",
          "pageSize",
          "savedItems",
          "sort",
          "totalItems",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "number"
          },
          "totalItems": {
            "type": "number"
          },
          "savedItems": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        }
      },
      "PaginatedListData": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListModel"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "PropertyModel": {
        "required": [
          "custom",
          "default",
          "description",
          "fieldType",
          "group",
          "hidden",
          "label",
          "name",
          "owner",
          "required",
          "sourceType",
          "unique",
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "contact",
              "company"
            ]
          },
          "fieldType": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "workspaceId": {
            "type": "number"
          },
          "required": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "custom": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "unique": {
            "type": "boolean"
          }
        }
      },
      "PropertyItem": {
        "required": [
          "property",
          "value"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CreateContactDto": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyItem"
            }
          },
          "listRelations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ObjectID": {
        "type": "object",
        "properties": {}
      },
      "CompanyRelation": {
        "required": [
          "company",
          "position"
        ],
        "type": "object",
        "properties": {
          "position": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        }
      },
      "ContactLinkedin": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ContactModel": {
        "required": [
          "_id",
          "companyRelations",
          "createdAt",
          "deleted",
          "insightId",
          "linkedin",
          "listRelations",
          "owner",
          "properties",
          "search",
          "source",
          "updatedAt",
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "owner": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "source": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "deleted": {
            "type": "boolean"
          },
          "workspaceId": {
            "type": "number"
          },
          "search": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "listRelations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "companyRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyRelation"
            }
          },
          "insightId": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "linkedin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactLinkedin"
            }
          }
        }
      },
      "ContactResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactModel"
            }
          }
        }
      },
      "Included": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "EQ",
              "NEQ",
              "IS_NOT_EMPTY",
              "IS_EMPTY",
              "CONTAINS",
              "LT",
              "LTE",
              "GT",
              "GTE",
              "LIKE",
              "NOT_LIKE",
              "CONTAINS_ANY",
              "NOT_CONTAINS_ANY",
              "NOT_EXISTS"
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "FilterItem": {
        "required": [
          "property"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "EQ",
              "NEQ",
              "IS_NOT_EMPTY",
              "IS_EMPTY",
              "CONTAINS",
              "LT",
              "LTE",
              "GT",
              "GTE",
              "LIKE",
              "NOT_LIKE",
              "CONTAINS_ANY",
              "NOT_CONTAINS_ANY",
              "NOT_EXISTS"
            ]
          },
          "property": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "included": {
            "$ref": "#/components/schemas/Included"
          }
        }
      },
      "SearchItem": {
        "required": [
          "properties",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SearchContactsDto": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItem"
            }
          },
          "search": {
            "$ref": "#/components/schemas/SearchItem"
          },
          "includeRelations": {
            "type": "boolean",
            "description": "Includes companies, owner and lists in each of contacts"
          },
          "includes": {
            "type": "array",
            "description": "Company fields(domain, name and etc.)",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "boolean",
            "description": "Returns only deleted contacts if true"
          }
        }
      },
      "PaginatedContactData": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactModel"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "CompanyRelationsDto": {
        "required": [
          "companyId"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "position": {
            "type": "string"
          }
        }
      },
      "AddCompaniesRelationsDto": {
        "required": [
          "companies"
        ],
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyRelationsDto"
            }
          }
        }
      },
      "CompanyModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "alternativeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "domain": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "headquarters": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "linkedin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedinInsightModel"
            }
          },
          "industry": {
            "$ref": "#/components/schemas/IndustryInsightModel"
          },
          "country": {
            "type": "string"
          },
          "position": {
            "type": "string"
          }
        }
      },
      "PaginatedCompanyData": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyModel"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "CreateCompanyDto": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PropertyItem"
          }
        }
      },
      "CompanyResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyModel"
          }
        }
      },
      "FilterAffiliationItem": {
        "required": [
          "operator",
          "value"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "EQ",
              "IS_NOT_EMPTY",
              "CONTAINS",
              "KEYWORDS_SEARCH",
              "CONTAINS_NAME",
              "CONTAINS_SENIORITY",
              "CONTAINS_POSITION",
              "RANGE",
              "UNIVERSAL_RANGE",
              "LOCATION",
              "EMAIL_STATUS",
              "INCLUDE",
              "NEQ",
              "NOT_CONTAINS",
              "NOT_CONTAINS_NAME",
              "NOT_LOCATION",
              "NOT_CONTAINS_SENIORITY",
              "NOT_CONTAINS_POSITION",
              "EXCLUDE"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateSearchFilterItem": {
        "required": [
          "excluded",
          "included",
          "property"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "enum": [
              "c",
              "o",
              "n",
              "t",
              "a",
              ".",
              "m",
              "e"
            ]
          },
          "excluded": {
            "$ref": "#/components/schemas/FilterAffiliationItem"
          },
          "included": {
            "$ref": "#/components/schemas/FilterAffiliationItem"
          }
        }
      },
      "LimitsItem": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Limit contacts to save"
          },
          "perCompany": {
            "type": "number"
          }
        }
      },
      "CreateSearchDto": {
        "required": [
          "filters",
          "saveAdded",
          "source"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/CreateSearchFilterItem"
          },
          "source": {
            "type": "string",
            "enum": [
              "contact",
              "company"
            ]
          },
          "limits": {
            "$ref": "#/components/schemas/LimitsItem"
          },
          "listIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saveAdded": {
            "type": "boolean"
          },
          "insightIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IInsightSearch": {
        "required": [
          "perCompany",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "perCompany": {
            "type": "number"
          }
        }
      },
      "InsightSearchModel": {
        "required": [
          "_id",
          "createdAt",
          "filters",
          "limits",
          "listIds",
          "note",
          "processingComplete",
          "saveAdded",
          "saved",
          "selected",
          "source",
          "status",
          "updatedAt",
          "user",
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "in_progress",
              "failed",
              "done",
              "stopped"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "workspaceId": {
            "type": "number"
          },
          "limits": {
            "$ref": "#/components/schemas/IInsightSearch"
          },
          "saved": {
            "type": "number"
          },
          "selected": {
            "type": "number"
          },
          "saveAdded": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "contact",
              "company"
            ]
          },
          "listIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processingComplete": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LinkedinInsightModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "IndustryInsightModel": {
        "required": [
          "_id",
          "en_US"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "en_US": {
            "type": "string"
          }
        }
      },
      "ContactInsightModel": {
        "required": [
          "_id"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "statusId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailCheckedAt": {
            "type": "string"
          },
          "contactInfo": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "linkedin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedinInsightModel"
            }
          },
          "incomplete": {
            "type": "boolean"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyModel"
          }
        }
      },
      "CompanyInsightModel": {
        "required": [
          "_id",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "alternativeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "domain": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "headquarters": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "linkedin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedinInsightModel"
            }
          },
          "industry": {
            "$ref": "#/components/schemas/IndustryInsightModel"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "FoundVerifiedEmail": {
        "required": [
          "email",
          "fqdn",
          "status"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "FoundEmail": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SearchInsightFilterItem": {
        "required": [
          "excluded",
          "included",
          "property"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "enum": [
              "c",
              "o",
              "n",
              "t",
              "a",
              ".",
              "m",
              "e"
            ]
          },
          "excluded": {
            "$ref": "#/components/schemas/FilterAffiliationItem"
          },
          "included": {
            "$ref": "#/components/schemas/FilterAffiliationItem"
          }
        }
      },
      "SearchInsightsDto": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchInsightFilterItem"
            }
          },
          "operator": {
            "type": "string",
            "enum": [
              "or",
              "and"
            ]
          },
          "requestType": {
            "type": "string",
            "description": "All contacts; include/exclude own workspace",
            "enum": [
              "all",
              "excluded",
              "included"
            ]
          }
        }
      },
      "Company": {
        "required": [
          "getProspectId"
        ],
        "type": "object",
        "properties": {
          "getProspectId": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Linkedin": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Geolocation": {
        "required": [
          "countryCode",
          "location",
          "region",
          "timezone"
        ],
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "ContactsResponseDto": {
        "required": [
          "companies",
          "geolocation",
          "getProspectId",
          "lastUpdatedAt",
          "linkedin"
        ],
        "type": "object",
        "properties": {
          "getProspectId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailCheckedAt": {
            "type": "string"
          },
          "contactInfo": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyRelation"
            }
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "linkedin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Linkedin"
            }
          },
          "geolocation": {
            "$ref": "#/components/schemas/Geolocation"
          }
        }
      },
      "PaginatedContactsData": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactsResponseDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "apiKey",
        "in": "header"
      }
    }
  }
}
